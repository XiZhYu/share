#pragma once
#include <vector>
#include <string>
using namespace std;
/*****************************************************************************
读取数据文件：
结点信息：坐标；
单元信息：材料ID、相关结点ID；
材料信息：弹性模量、泊松比、重度；
约束信息：相关结点ID、结点位移方向、位移值；
面力信息：相关结点ID、面力大小；
集中力信息：相关结点、力大小；
*****************************************************************************/

/*******************************************************************
计算结果输出
结点位移、单元中心应力、结点应力
*******************************************************************/

/*****************************************************************************
结点信息：坐标,结点数；
提取节点坐标node[i][j],i为结点编号，j为0、1、2分别对应x坐标、y坐标、z坐标;
对应格式：
Node	16
0.0	0.0	0.0
1.0	0.0	0.0
*****************************************************************************/
extern vector<vector<double>> node;
extern int nodeNumber;//结点数目；

/*****************************************************************************
单元信息：材料ID、相关结点ID,单元数、单元最大的结点数
提取单元信息element[i][j]，i为单元编号，j为0到9分别对应单元结点数、材料、相关8个节点编号;
对应格式：
Element	3 8
8	0	0	1	6	7	8	9	14	15
8	0	1	2	5	6	9	10	13	14
*****************************************************************************/
extern vector<vector<int>> element;
extern int elementNumber;//单元数目；
extern int eleNodeMax;//单元最大结点数

/*****************************************************************************
材料信息：弹性模量、泊松比、重度,材料数；
提取材料信息,material[i][j];i为材料编号，j为0到2分别对应弹性模量、泊松比、重度；
对应格式：
Material	1
2E+10	0.17	21000
*****************************************************************************/
extern vector<vector<double>> material;
extern int materialNumber;//材料数目；

/*****************************************************************************
约束信息：相关结点ID、结点位移方向、位移大小，约束数；
提取约束信息Bound[i][j]，i为约束编号，j为0到2分别对应结点编号、xyz方向、约束位移值;
对应格式：
BOUND	12
0	0	0
0	1	0
0	2	0
*****************************************************************************/
extern vector<vector<double>> bound;
extern int boundNumber;//约束数目；

/*****************************************************************************
分布力信息：相关结点ID、作用方向、荷载大小，分布荷载数；
假设结点能布在分布力的边界处；
提取分布荷载信息faceload[i][j]，i为分布力编号，j为0到7分别为结点1、2、3、4的ID、结点1、2、3、4的法向荷载值（外向为正）；
对应格式：
Faceload	3
8	9	14	15	0	-10000	-10000	0
9	10	13	14	-10000	-20000	-20000	-10000
补充说明：faceload中结点排序规则严格与element中的结点规则一致
即element中结点顺序定下后，即定下了局部坐标系，faceload的结点顺序严格按照局部坐标系中右手螺旋、逆时针原则，且起点在（-1，-1）处
*****************************************************************************/
extern vector<vector<double>> faceload;
extern int faceloadNumber;//面力数目；

/*****************************************************************************
集中力信息：力x坐标、力y坐标、力x分量、力y分量；
提取集中荷载信息nodeload[i][j]，i为约束编号，j为0到3分别结点ID、力x分量、力y分量、力z分量；
对应格式：
Nodeload	1
3	0	0	10000
*****************************************************************************/
extern vector<vector<double>> nodeload;
extern int nodeloadNumber;//集中力数目；

extern vector<double> displacement;
extern vector<vector<double>> centerStress;
extern vector<vector<double>> nodeStress;

class dataInOut
{
public:
	dataInOut();
	~dataInOut();

	//读取数据文件
	void read(string filename);

	//输出整体结点位移值到FEMout.txt中
	void nodeDisplacementOut();

	//输出单元中心（应力佳点）处的应力值到FEMout.txt中
	void centerStressOut();

	//输出结点处的应力值到FEMout.txt中
	void nodeStressOut();

	//输出VTK文件
	void vtkOut();

private:
	string file;
};


// xiezhuoyu
// mechanics_xzy@163.com